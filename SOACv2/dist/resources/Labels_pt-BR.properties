#titulo
soac=SOAC - Simulador de Organização e Arquitetura de Computadores
#menus
inserir=Inserir
instrucoes=Instruções
variavel=Variável
variaveis=Variáveis
mensagem=Mensagem
conteudodefaultmensagem=Não há mensagem
conteudodefaultvariaveis=Não há variáveis
janela=Janela
mensagens=Mensagens
exibir=Exibir
esconder=Esconder
naoexibir=Não Exibir
exibirmenssimulacao=Exibir Mensagens da Simulação
outros=Outros
sied=SIED - Simuladores Integrados de Estrutura de Dados
sin=SIN - Simuladores Integrados de Sistemas Operacionais
ajuda=Ajuda
guia=Guia
sobre=Sobre
idioma=Idioma
portugues=Português
ingles=Inglês
questionarios=Questionários
avaliacaosoac=Avaliação do SOAC
relatobugs=Relato de Bugs
questionarioavaliacaosoac=Questionário de Avaliação do SOAC
relatobugssoac=Relato de Bugs do SOAC
sobretxt=O Simulador de Organização e Arquitetura de Computadores (SOAC) é um ambiente\nde simulação que proporciona ao aluno e professor a visualização de conceitos\nteóricos envolvidos na execução de instruções em um computador.
#Janela Guia
passo1=Passo 1
passo2=Passo 2
passo3=Passo 3
passo4=Passo 4
passo5=Passo 5
passo6=Passo 6
passo1txt=Clique no círculo com o nome "Computador". Para saber mais detalhes\nsobre quaisquer dos componentes desse simulador, passe o mouse por\ncima de cada um deles para suas informações aparecem na aba\n"Mensagens".
passo2txt=Clique em todos os círculos que representam os componentes do\ncomputador para revelar seus componentes internos. Você deverá clicar\nno círculo com o nome "Unidade Central de Processamento" antes de\nclicar em "Sistema de Interconexão".
passo3txt=Após todos os componentes se expandirem, clique nos círculos com os\nnomes "Memória Principal", "UCP" e "Barramento", para obter uma visão\nmais detalhada deles.
passo4txt=Através do menu "Inserir", insira instruções e variáveis. Note que para\ninserir instruções que possuam operandos com os modos de\nendereçamento direto ou indireto, é necessário inserir uma variável antes.\nNo campo valor, informe o identificador de uma variável inserida (você\npode visualizar as variáveis inseridas na aba "Variáveis"). Caso opte pelas\nopções "Registrador" ou "Indireto de Registrador" para um dos\noperandos, informe no campo valor o identificador de um dos\nregistradores da UCP (R1, R2, R3 ou R4).
passo5txt=Após inserir todas as instruções desejadas, clique no botão "Iniciar\nSimulação". Aparecerão na posição central inferior da tela, dois novos\nbotões. Clique no botão com o símbolo de "Play" para começar a\nsimulação da execução das instruções. Você poderá pausar a animação a\nqualquer momento clicando no mesmo botão (note que, ao fazer isso, o\nseu símbolo muda) e continuar a animação clicando no mesmo. O\nsegundo botão com o símbolo de "Stop" serve para finalizar a execução\ndas instruções. Se você clicar nesse botão, os efeitos das instruções\nexecutadas permanecerão na máquina e para executar mais instruções,\n terá que inseri-las.
passo6txt=Ao longo da animação, serão exibidas mensagens explicativas para cada\num dos passos da execução das instruções. Para ir ao próximo passo, leia\na mensagem, clique no botão "Continuar" de sua janela e após, clique no\nbotão "Play" novamente. Se você não quiser ver essas mensagens, clique\nno botão "Não mostrar mensagens" da janela de uma mensagem ou\ndesmarque a opção "Exibir Mensagens da Simulação" através do menu\nJanela -> Mensagens.
#circulos
clique=Clique para expandir
computador=COMPUTADOR
es=Entrada/Saída
memoriaprincipal=Memória Principal
sistemainterconexao=Sistema de Interconexão
ucp=Unidade Central de\n Processamento
dados=Dados
ucpabrev=UCP
registradores=Registradores
ula=Unidade Lógica\n e Aritmética
barramentoint=Barramento Interno
uc=Unidade de Controle
barramento=Barramento
moduloes=Módulo de E/S
legiveishumano=Legíveis\n ao ser\n humano
legiveismaquina=Legíveis\n à Máquina
comunicacaodisprem=\u0020\u0020\u0020Comunicação \ncom dispositivos\n       remotos
#Janela Inserir Instruções
erro=Erro
aviso=Aviso
avisoidioma=A alteração de idioma só terá efeito após reinicar
inseririnstrucoes=Inserir Instruções
tipo=Tipo:
operando1=Operando 1
operando2=Operando 2
modoenderecamento=Modo de endereçamento:
valor=Valor:
imediato=Imediato
direto=Direto
indireto=Indireto
registrador=Registrador
indiretoregistrador=Indireto de Registrador
inserirseta=Inserir>>
removerselecionada=Remover Selecionada
iniciarsimulacao=Iniciar Simulação
informeoperando1=Por favor, informe um valor para o operando 1
informeoperando2=Por favor, informe um valor para o operando 2
modoop1naopodeimediato=O modo de endereçamento do operando 1 não pode ser imediato
valorvarop1naoexiste=A variável com o valor informado para o operando 1 não existe
valorvarop1ehponteiro=A variável com o valor informado para o operando 1 é um ponteiro
valorvarop1naoehponteiro=A variável com o valor informado para o operando 1 não é um ponteiro
registradorvalorop1naoexiste=O registrador com o valor informado para o operando 1 não existe
registradornaocontemendmemoria=O registrador informado não contém um endereço de memória
valorop2precisaserintoufloat=O valor informado para o operando 2 precisa ser um inteiro ou ponto flutuante
valorvarop2naoexiste=A variável com o valor informado para o operando 2 não existe
valorvarop2ehponteiro=A variável com o valor informado para o operando 2 é um ponteiro
valorvarop2naoehponteiro=A variável com o valor informado para o operando 2 não é um ponteiro
registradorvalorop2naoexiste=O registrador com o valor informado para o operando 2 não existe
#Janela Inserir Variável
inserirvariavel=Inserir Variável
identificador=Identificador [A-Z]:
inteiro=Inteiro
pontoflutuante=Ponto flutuante
valorinicial=Valor inicial (opcional):
normal=Normal
ponteiro=Ponteiro
identificadorabrev=ID
enderecoabrev=END
informeidentificador=Por favor, informe um identificador
informevalor=Por favor, informe um valor
identificadorinvalido=não é um identificador válido
valornaoehinteiro=O valor informado não é um número inteiro
valornaoehfloat=O valor informado não é um número de ponto flutuante
ponteirosoharmazenainteiros=Um ponteiro só pode armazenar valores inteiros
naohavariavelcomendereco=Não há variável com o endereço informado
ponteironaoreferenciaponteiro=Não é possível, nesse simulador, um ponteiro referenciar outro ponteiro
#componentes internos
ucpabrev=UCP
r=R
pc=PC
mar=MAR
mbr=MBR
ir=IR
ioar=I/O AR
iobr=I/O BR
ulaabrev=ULA
ucabrev=UC
endereco=Endereço
opcode=Opcode
instrucoesmin=instruções
enderecosmin=endereços
dadosmin=dados
dado=Dado
memoriaseminst=A Memória não contém instruções a serem executadas
memoriasemdados=A Memória não contém dados
#mensagens explicativas
computadornaoxpandido=\u0020Este círculo representa um computador.\n Clique nesse círculo para ver seus componentes\n internos e iniciar a simulação.
computadorexpandido=\u0020Esse círculo representa um computador com seus\n componentes principais representados por círculos.\n Para ver datalhes de cada um deles e iniciar a simulação\n com eles envolvidos, clique no círculo que os representam.
memoriaprincipaltxt=\u0020Esse círculo representa uma memória principal.\n A memória principal pode armazenar tanto instruções\n quanto dados. Para visualizar com mais detalhes a organização da\n memória principal, clique nesse círculo.
entradasaidatxt=\u0020Esse círculo representa os dispositivos de entrada/saída, que podem ser divididos em três categorias:\n 1 - Legíveis ao ser humano: adequados para a comunicação com usuários de computador. Exemplos: monitores de vídeo e impressoras.\n 2 - Legíveis à máquina: adequados para a comunicação com equipamentos. Exemplos: discos magnéticos, sensores e atuadores.\n 3 - Comunicação: adequados para a comunicação com dispositivos remotos. Exemplos: terminal, placa de rede ou outro computador.
ucptxt="\u0020Esse circulo representa uma UCP (Unidade Central de\n Processamento). Uma UCP é formada por\n registradores, unidade lógica e aritmética, barramento interno\n e unidade de controle. Para ver mais detalhes sobre cada\n um desses componentes, clique com o mouse.
memoriainternatxt=\u0020A memória principal está aqui representada por duas tabelas:\n uma que armazena instruções e outra que armazena dados.\n Na tabela de instruções, as colunas são as seguintes:\n - Endereço : O endereço da memória que a instrução ocupa\n - Opcode: Um código que identifica o tipo da instrução,\n   relacionado com os operandos 1 e 2.\n - Operandos 1 e 2: Números que indentificam o endereço de\n   memória de um dado, um dado ou um dos registradores\n   da UCP, dependendo do modo de endereçamento\n   desses operandos.\n Cada linha da tabela de dados contém o que programadores\n definem como variávies. Essa tabela possui duas colunas,\n na primeira está contido o endereço de uma variável\n inserida e na segunda, o dado que essa variável armazena.
registradorestxt=\u0020Os registradores armazenam dados e referências à memória.\n O tempo de acesso aos registradores é muito mais rápido,\n se comparado ao da memória principal.
pctxt=\u0020O PC (Program Counter) armazena o valor da próxima\n instrução, para que quando uma instrução terminar de\n ser executada, a UCP saiba qual é a próxima que ela\n deve executar.
martxt=\u0020O MAR (Memory Address Register) é responsável por\n armazenar as referências de endereços de memória\n que serão transferidas para o barramento de endereços\n numa leitura de um dado ou instrução da memória principal.
mbrtxt=\u0020O MBR (Memory Buffer Register) é responsável por\n armazenar os dados a serem escritos na memória\n principal pelo barramento de dados e por receber\n os dados ou instruções da memória, em uma\n operação de leitura, através desse mesmo barramento.
irtxt=\u0020O IR (Instruction Register) é responsável por\n armazenar as instruções que chegam da memória.
ulatxt=\u0020A ULA (Unidade Lógica e Aritmética) é a reponsável\n por executar operações lógicas e aritméticas, como\n somar, subtrair, multiplicar e dividir.
uctxt=\u0020A UC (Unidade de Controle) é quem coordena as atividades\n da UCP. Ela emite as instruções de leitura de dados ou\n instruções e de escrita de dados para o barramento de\n instruções. Além disso, ela é responsável por emitir\n instruções que vão realizar operações internas na UCP,\ncomo atualizar o PC, realizar operações aritméticas e\ntransferir dados entre componentes da UCP pelo\n barramento interno dessa.
barramentotxt=\u0020Esse componente faz parte do sistema de\n interconexão. Para ver mais detalhes sobre\n algum desses componentes, clique no círculo\n \"Barramento\" ou \"Módulo de E/S\".
barramentointernotxt=\u0020O barramento é por onde fluem os dados ou\ninstruções da memória principal para a UCP, ou\n vice-versa. É formado por três sub-barramentos:\no barramento de instruções, o de endereços e o de\ndados, por onde fluem instruções da UC, endereços\nde memória e dados, respectivamente.
#mensagens do ciclo de busca
continuar=Continuar
naomostrarmensagens=Não mostrar mensagens
atualizarpctxt=\u0020Será dado início ao ciclo de busca, para buscar a próxima instrução na memória.\n O valor de PC está atualizado com o endereço da instrução que será executada\n em seguida.
movermartxt =\u0020O valor de PC é então transferido para o MAR, que contém os endereços\n que são tranferidos do barramento para a memória e que chegam\n da memória através do barramento.
compiareadbarramentotxt=\u0020A unidade de controle é responsável por coordenar as atividades da UCP.\n Neste caso, ela envia o comando \"READ\" para o barramento, significando\n que a UCP está requisitando uma leitura de dados da memória.
copiarvalormarbarramentotxt = \u0020Assim como o comando \"READ\", o valor de MAR, que contém o endereço\n da próxima instrução, também é transferido para o barramento.
moverdadosbarramentomemoriatxt= \u0020Esses dois valores serão transferidos para a memória, pelo barramento.\n O valor de MAR no barramento de endereços e o comando \"READ\"\n no barramento de instruções.
transferirinstrucaotxt=\u0020A instrução requisitada é então transferida para a UCP pelo barramento de dados.\n Inicialmente, o registrador que conterá a instrução será o MBR, já que é ele\n que armazena os dados ou instruções logo que chegam da memória.
atualizarpcproxinstrucaotxt = \u0020O valor de PC é atualizado para conter o valor da próxima instrução.
naohaproxinstrucaotxt=\u0020Como não há próxima instrução a ser executada, o valor de PC não é alterado.
copiarmbrparairtxt=\u0020A instrução, que está no MBR, é copiada para o IR, o registrador de instruções.
#mensagens do ciclo de execução
transferirirmbrtxt=\u0020O valor contido no segundo operando do IR é copiado para MBR,\n para em seguida, ser transferido para a memória.
copiarvalormarbarramentoexecucaotxt=\u0020O valor de MAR é transferido para o barramento de endereços.
transferirirmartxt=\u0020A referência do endereço para onde será transferido o dado é copiado para o MAR.
copiarvalormbrbarramentoexecucaotxt=\u0020O valor do MBR, que corresponde ao dado a ser escrito na memória, é transferido para o barramento de dados.
copiarwritebarramentotxt=\u0020A instrução \"WRITE\" é copiada da UC para o barramento de instruções.
moverdadosbarramentomemoriaescritatxt=\u0020Os dados contidos no barramento são então transferidos para a memória.
moverdadomemoriatxt=\u0020O dado é então escrito na memória no endereço requisitado pela UCP.
moverdadoregistradortxt=\u0020O dado, referente ao segundo operando da instrução em IR, é copiado para o registrador especificado no primeiro operando.
moverreferenciaindiretaregistradorirtxt=\u0020O valor do registrador referenciado no primeiro operando de IR é transferido para esse operando.
transferirirmar2txt=\u0020O segundo operando de IR, que contém a referência do dado a ser buscado na memória, é transferido para MAR.
copiarreadbarramentoexecucaotxt=\u0020O valor \"READ\" é copiado da UC para o barramento de instruções.
moverdadosbarramentomemorialeituratxt=\u0020Os dados da requisição da leitura do dado contido no endereço especificado são movidos\n para a memória pelo barramento.
transferirdadoleiturabarramentotxt=\u0020O dado lido da memória é então transferido para a UCP pelo barramento de dados.
transferirmbrparairexecucaotxt=\u0020O valor contido em MBR, que corresponde ao dado buscado da memória, é transferido para o segundo operando de IR.
moverdadoregistradorirtxt=\u0020O valor contido no registrador referenciado no segundo operando de IR é transferido para esse operando.
fimexecucaotxt=\u0020Acabou a execução dessa instrução.
transferirirmar1txt=\u0020O primeiro operando de IR, que contém a referência do dado a ser buscado na memória, é transferido para MAR.
transferirmbrirulatxt=\u0020O valor contido em MBR e o segundo operando de IR são transferidos para a ULA.
efetuaroperacaoaritmeticatxt=\u0020A operação aritmética com os dados é então efetuada.
transferirulambrtxt=\u0020O resultado da operação é transferido para MBR, para ser escrito na memória.
transferirregistradorirulatxt=\u0020O dado contido no registrador e o que está contido no segundo operando de IR são transferidos para a ULA.
moverdadoularegistradortxt=\u0020O resultado da operação é então transferido para o registrador.
transferirmbrregistradorulatxt=\u0020O dado contido no registrador e o que está em MBR, são então copiados para a ULA.
transferirregregulatxt=\u0020Os dados contidos nos dois registradores especificados nos operandos 1 e 2 de IR são copiados para a ULA.
transferirirmarwritetxt=\u0020O primeiro operando de IR, que é a referência para onde o resultado da operação\n será escrito na memória, é copiado para MAR.
#mensagens do ciclo indireto
verificarirtxt=\u0020A unidade de controle examina o conteúdo de IR para determinar\n se ele contém um especificador de operando que use endereçamento\n indireto.
transferiroperandomartxt=\u0020operando faz uma referência indireta a um dado na memória.\n Nesse caso, os bits em IR que fazem essa referência são transferidos para MAR.
transferiroperandomartxtnaoha=\u0020Não há operandos nessa instrução que fazem referência indireta à memória.
copiarreadbarramentoindtxt=\u0020O comando \"READ\" é transferido para o barramento de endereços para iniciar a leitura do ciclo indireto.
copiarvalormarbarramentoindtxt=\u0020O valor de MAR, que corresponde ao endereço indireto, é transferido para o barramento de endereços.
moverdadosbarramentomemoriaindtxt=\u0020Os dados contidos no barramento são então movidos para a memória,\n requisitando o endereço contido no endereço que está no barramento.
transferirdadoreferenciaindiretabarramentotxt=\u0020O endereço que contém o dado e que é referenciado indiretamente pela referência\n em MAR é transferido para a UCP pelo barramento de dados.
transferirmbrparairtxt=\u0020O campo de endereço referente ao operando que faz a referência indireta\n é atualizado para conter o valor que ele referencia, ou seja, o endereço\n que contém o dado.
oprimeiro=\u0020O primeiro
osegundo=\u0020O segundo
#mensagem final
naohamaisinstrucoestxt=\u0020Não há mais instruções a serem executadas. Para executar mais instruções, insira-as.
#Janela Outros Simuladores
outrossimuladores=Outros Simuladores
irpara=Ir